{"ast":null,"code":"import _objectSpread from \"/home/fernando/tfg/portal/reactfront/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/fernando/tfg/portal/reactfront/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/fernando/tfg/portal/reactfront/src/components/login/login.jsx\";\nimport React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Button from '../generic/button/button';\nimport IconButton, { iconClassNames } from '../generic/icon_button/icon_button';\nimport Input from '../generic/input/input';\nimport styles from './login.module.css';\nvar initialState = {\n  email: undefined,\n  password: undefined\n};\n\nvar handleLogin = function handleLogin(state) {// axios.post('/api/login/', state).then(response => {}, error => {})\n};\n\nvar Login = function Login(props) {\n  var _useState = useState(initialState),\n      _useState2 = _slicedToArray(_useState, 2),\n      loginParams = _useState2[0],\n      setLoginParams = _useState2[1];\n\n  return React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.backButtonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    iconClassNames: iconClassNames.arrowBack,\n    onClick: props.history.goBack,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: styles.formContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: styles.formFlex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: styles.titleLabel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, props.titleLabel), React.createElement(Input, {\n    label: props.emailLabel,\n    type: \"email\",\n    value: loginParams.email,\n    onChange: function onChange(email) {\n      return setLoginParams(_objectSpread({}, loginParams, {\n        email: email\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(Input, {\n    label: props.passwordLabel,\n    type: \"password\",\n    value: loginParams.password,\n    onChange: function onChange(password) {\n      return setLoginParams(_objectSpread({}, loginParams, {\n        password: password\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Button, {\n    primary: true,\n    label: props.buttonLabel,\n    onClick: function onClick() {\n      return handleLogin(loginParams);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: styles.explanationText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, props.explanationText))));\n};\n\nLogin.defaultProps = {\n  buttonLabel: 'Sign in',\n  explanationText: 'Credentials are required in order to obtain access to the service.',\n  emailLabel: 'Email address',\n  passwordLabel: 'Password',\n  titleLabel: 'Sign in'\n};\nexport default withRouter(Login);","map":{"version":3,"sources":["/home/fernando/tfg/portal/reactfront/src/components/login/login.jsx"],"names":["React","useState","withRouter","Button","IconButton","iconClassNames","Input","styles","initialState","email","undefined","password","handleLogin","state","Login","props","loginParams","setLoginParams","backButtonContainer","arrowBack","history","goBack","formContainer","formFlex","titleLabel","emailLabel","passwordLabel","buttonLabel","explanationText","defaultProps"],"mappings":"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","sourcesContent":["// @flow\nimport React, { useState } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nimport Button from '../generic/button/button';\nimport IconButton, { iconClassNames } from '../generic/icon_button/icon_button';\nimport Input from '../generic/input/input';\n\nimport styles from './login.module.css';\n\ntype Props = {|\n  buttonLabel: string,\n  emailLabel: string,\n  explanationText: string,\n  history: { goBack: () => void },\n  passwordLabel: string,\n  titleLabel: string\n|};\n\ntype State = {|\n  email: ?string,\n  password: ?string\n|};\n\nconst initialState: State = {\n  email: undefined,\n  password: undefined\n};\n\nconst handleLogin = (state: State) => {\n  // axios.post('/api/login/', state).then(response => {}, error => {})\n};\n\nconst Login = (props: Props) => {\n  const [loginParams, setLoginParams] = useState(initialState);\n\n  return (\n    <React.Fragment>\n      <div className={styles.backButtonContainer}>\n        <IconButton\n          iconClassNames={iconClassNames.arrowBack}\n          onClick={props.history.goBack}\n        />\n      </div>\n\n      <div className={styles.formContainer}>\n        <div className={styles.formFlex}>\n          <h1 className={styles.titleLabel}>{props.titleLabel}</h1>\n          <Input\n            label={props.emailLabel}\n            type=\"email\"\n            value={loginParams.email}\n            onChange={email => setLoginParams({ ...loginParams, email })}\n          />\n          <Input\n            label={props.passwordLabel}\n            type=\"password\"\n            value={loginParams.password}\n            onChange={password => setLoginParams({ ...loginParams, password })}\n          />\n          <Button\n            primary\n            label={props.buttonLabel}\n            onClick={() => handleLogin(loginParams)}\n          />\n          <p className={styles.explanationText}>{props.explanationText}</p>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nLogin.defaultProps = {\n  buttonLabel: 'Sign in',\n  explanationText:\n    'Credentials are required in order to obtain access to the service.',\n  emailLabel: 'Email address',\n  passwordLabel: 'Password',\n  titleLabel: 'Sign in'\n};\n\nexport default withRouter(Login);\n"]},"metadata":{},"sourceType":"module"}