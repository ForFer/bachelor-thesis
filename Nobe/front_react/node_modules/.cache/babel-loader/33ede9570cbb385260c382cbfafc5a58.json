{"ast":null,"code":"import _toConsumableArray from \"/home/fernando/tfg/portal/reactfront/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/fernando/tfg/portal/reactfront/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/fernando/tfg/portal/reactfront/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/fernando/tfg/portal/reactfront/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/fernando/tfg/portal/reactfront/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/fernando/tfg/portal/reactfront/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/fernando/tfg/portal/reactfront/src/components/generics/table.js\";\nimport React from 'react';\nimport { MuiThemeProvider } from 'material-ui';\nimport { Table, TableBody, TableHeader, TableHeaderColumn, TableRow, TableRowColumn } from 'material-ui'; // properties of TableHeader component\n\nvar headerProps = {\n  enableSelectAll: true,\n  displaySelectAll: true,\n  adjustForCheckbox: false\n}; // initial set of rows, simulating data from the database\n\nvar rows = [{\n  firstName: \"Adrian\",\n  favColor: \"gold\",\n  uniqueId: 0\n}, {\n  firstName: \"Alma\",\n  favColor: \"green\",\n  uniqueId: 1\n}, {\n  firstName: \"Conny\",\n  favColor: \"black\",\n  uniqueId: 2\n}, {\n  firstName: \"Jane\",\n  favColor: \"blue\",\n  uniqueId: 3\n}]; // our table hader information, key is the name of the \n// property to sort by when the header is clicked \n// our table component that can sort columns\n\nvar SortableTable =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(SortableTable, _React$Component);\n\n  function SortableTable(props) {\n    var _this;\n\n    _classCallCheck(this, SortableTable);\n\n    console.log(props);\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(SortableTable).call(this, props));\n    _this.state = {\n      rows: rows,\n      sortBy: 'firstName'\n    };\n    return _this;\n  }\n\n  _createClass(SortableTable, [{\n    key: \"renderHeaders\",\n    value: function renderHeaders() {\n      var _this2 = this;\n\n      var header = headers.map(function (h) {\n        return React.createElement(SortableHeader, {\n          key: h.key,\n          name: h.name,\n          onClicked: function onClicked() {\n            return _this2.updateSortBy(h.key);\n          },\n          isSortColumn: _this2.state.sortBy == h.key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        });\n      });\n      return React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, header);\n    }\n  }, {\n    key: \"renderRows\",\n    value: function renderRows() {\n      return this.state.rows.map(function (row, i) {\n        return React.createElement(UserRow, Object.assign({}, row, {\n          key: row.uniqueId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }));\n      });\n    }\n  }, {\n    key: \"updateSortBy\",\n    value: function updateSortBy(sortBy) {\n      // multiple clicks on the same column reverse the sort order\n      if (sortBy == this.state.sortBy) {\n        this.setState({\n          rows: _toConsumableArray(this.state.rows.reverse())\n        });\n        return;\n      }\n\n      var rows = _toConsumableArray(this.state.rows);\n\n      rows.sort(function (a, b) {\n        if (a[sortBy] < b[sortBy]) return -1;\n        if (a[sortBy] > b[sortBy]) return 1;\n        return 0;\n      });\n      this.setState({\n        rows: rows,\n        sortBy: sortBy\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var headers = this.props.tableHeaders;\n      return React.createElement(MuiThemeProvider, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(TableHeader, Object.assign({}, headerProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), this.renderHeaders()), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, this.renderRows())));\n    }\n  }]);\n\n  return SortableTable;\n}(React.Component);\n\nfunction SortableHeader(props) {\n  var style = {\n    cursor: \"pointer\"\n  };\n\n  if (props.isSortColumn) {\n    style.fontWeight = \"bold\";\n    style.color = \"black\";\n  }\n\n  return React.createElement(TableHeaderColumn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: style,\n    onClick: function onClick() {\n      return props.onClicked();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, props.name));\n}\n\nfunction UserRow(props) {\n  return React.createElement(TableRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(TableRowColumn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, props.firstName), React.createElement(TableRowColumn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }, props.favColor));\n}\n\nexport default SortableTable;","map":{"version":3,"sources":["/home/fernando/tfg/portal/reactfront/src/components/generics/table.js"],"names":["React","MuiThemeProvider","Table","TableBody","TableHeader","TableHeaderColumn","TableRow","TableRowColumn","headerProps","enableSelectAll","displaySelectAll","adjustForCheckbox","rows","firstName","favColor","uniqueId","SortableTable","props","console","log","state","sortBy","header","headers","map","h","key","name","updateSortBy","row","i","setState","reverse","sort","a","b","tableHeaders","renderHeaders","renderRows","Component","SortableHeader","style","cursor","isSortColumn","fontWeight","color","onClicked","UserRow"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAgC,aAAhC;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,WAA3B,EAAwCC,iBAAxC,EAA2DC,QAA3D,EAAqEC,cAArE,QAA2F,aAA3F,C,CAEA;;AACA,IAAIC,WAAW,GAAG;AAChBC,EAAAA,eAAe,EAAE,IADD;AAEhBC,EAAAA,gBAAgB,EAAE,IAFF;AAGhBC,EAAAA,iBAAiB,EAAE;AAHH,CAAlB,C,CAMA;;AACA,IAAIC,IAAI,GAAG,CACT;AAACC,EAAAA,SAAS,EAAE,QAAZ;AAAsBC,EAAAA,QAAQ,EAAE,MAAhC;AAAwCC,EAAAA,QAAQ,EAAE;AAAlD,CADS,EAET;AAACF,EAAAA,SAAS,EAAE,MAAZ;AAAoBC,EAAAA,QAAQ,EAAE,OAA9B;AAAuCC,EAAAA,QAAQ,EAAE;AAAjD,CAFS,EAGT;AAACF,EAAAA,SAAS,EAAE,OAAZ;AAAqBC,EAAAA,QAAQ,EAAE,OAA/B;AAAwCC,EAAAA,QAAQ,EAAE;AAAlD,CAHS,EAIT;AAACF,EAAAA,SAAS,EAAE,MAAZ;AAAoBC,EAAAA,QAAQ,EAAE,MAA9B;AAAsCC,EAAAA,QAAQ,EAAE;AAAhD,CAJS,CAAX,C,CAOA;AACA;AAGA;;IACMC,a;;;;;AACJ,yBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,uFAAMA,KAAN;AACA,UAAKG,KAAL,GAAa;AACTR,MAAAA,IAAI,EAAJA,IADS;AAETS,MAAAA,MAAM,EAAE;AAFC,KAAb;AAHgB;AAQjB;;;;oCAEc;AAAA;;AACb,UAAIC,MAAM,GAAEC,OAAO,CAACC,GAAR,CAAa,UAACC,CAAD,EAAO;AAC9B,eAAO,oBAAC,cAAD;AACG,UAAA,GAAG,EAAEA,CAAC,CAACC,GADV;AAEG,UAAA,IAAI,EAAED,CAAC,CAACE,IAFX;AAGG,UAAA,SAAS,EAAE;AAAA,mBAAI,MAAI,CAACC,YAAL,CAAkBH,CAAC,CAACC,GAApB,CAAJ;AAAA,WAHd;AAIG,UAAA,YAAY,EAAE,MAAI,CAACN,KAAL,CAAWC,MAAX,IAAqBI,CAAC,CAACC,GAJxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAKD,OANW,CAAZ;AAOA,aAAO,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAWJ,MAAX,CAAP;AACD;;;iCAEY;AACX,aAAO,KAAKF,KAAL,CAAWR,IAAX,CAAgBY,GAAhB,CAAqB,UAACK,GAAD,EAAMC,CAAN;AAAA,eAAY,oBAAC,OAAD,oBAAaD,GAAb;AAAkB,UAAA,GAAG,EAAEA,GAAG,CAACd,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAZ;AAAA,OAArB,CAAP;AACD;;;iCAEYM,M,EAAO;AAChB;AACA,UAAIA,MAAM,IAAI,KAAKD,KAAL,CAAWC,MAAzB,EAAiC;AAC/B,aAAKU,QAAL,CAAe;AAACnB,UAAAA,IAAI,qBAAM,KAAKQ,KAAL,CAAWR,IAAX,CAAgBoB,OAAhB,EAAN;AAAL,SAAf;AACA;AACD;;AAED,UAAIpB,IAAI,sBAAO,KAAKQ,KAAL,CAAWR,IAAlB,CAAR;;AACAA,MAAAA,IAAI,CAACqB,IAAL,CAAW,UAACC,CAAD,EAAGC,CAAH,EAAS;AAClB,YAAID,CAAC,CAACb,MAAD,CAAD,GAAYc,CAAC,CAACd,MAAD,CAAjB,EACE,OAAO,CAAC,CAAR;AACF,YAAGa,CAAC,CAACb,MAAD,CAAD,GAAYc,CAAC,CAACd,MAAD,CAAhB,EACE,OAAO,CAAP;AACF,eAAO,CAAP;AACD,OAND;AAQA,WAAKU,QAAL,CAAc;AAACnB,QAAAA,IAAI,EAAJA,IAAD;AAAOS,QAAAA,MAAM,EAANA;AAAP,OAAd;AACD;;;6BAGM;AAEP,UAAIE,OAAO,GAAG,KAAKN,KAAL,CAAWmB,YAAzB;AAEA,aACI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD,oBAAiB5B,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UACK,KAAK6B,aAAL,EADL,CADF,EAIE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,UAAL,EADH,CAJF,CADA,CADJ;AAYD;;;;EA9DyBtC,KAAK,CAACuC,S;;AAmElC,SAASC,cAAT,CAAwBvB,KAAxB,EAA8B;AAC5B,MAAIwB,KAAK,GAAG;AACVC,IAAAA,MAAM,EAAE;AADE,GAAZ;;AAGA,MAAGzB,KAAK,CAAC0B,YAAT,EAAsB;AACpBF,IAAAA,KAAK,CAACG,UAAN,GAAmB,MAAnB;AACAH,IAAAA,KAAK,CAACI,KAAN,GAAc,OAAd;AACD;;AAED,SACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAEJ,KAAZ;AAAmB,IAAA,OAAO,EAAE;AAAA,aAAMxB,KAAK,CAAC6B,SAAN,EAAN;AAAA,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsD7B,KAAK,CAACU,IAA5D,CADF,CADF;AAKD;;AAGD,SAASoB,OAAT,CAAiB9B,KAAjB,EAAuB;AACrB,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBA,KAAK,CAACJ,SAAvB,CADF,EAEE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiBI,KAAK,CAACH,QAAvB,CAFF,CADF;AAMD;;AAED,eAAeE,aAAf","sourcesContent":["import React from 'react';\nimport { MuiThemeProvider} from 'material-ui';\nimport { Table, TableBody, TableHeader, TableHeaderColumn, TableRow, TableRowColumn } from 'material-ui';\n\n// properties of TableHeader component\nlet headerProps = {\n  enableSelectAll: true,\n  displaySelectAll: true,\n  adjustForCheckbox: false\n};\n\n// initial set of rows, simulating data from the database\nlet rows = [\n  {firstName: \"Adrian\", favColor: \"gold\", uniqueId: 0 },\n  {firstName: \"Alma\", favColor: \"green\", uniqueId: 1 },\n  {firstName: \"Conny\", favColor: \"black\", uniqueId: 2 },\n  {firstName: \"Jane\", favColor: \"blue\", uniqueId: 3 }\n];\n\n// our table hader information, key is the name of the \n// property to sort by when the header is clicked \n\n\n// our table component that can sort columns\nclass SortableTable extends React.Component {\n  constructor(props){\n    console.log(props);\n    super(props);\n    this.state = {\n        rows, \n        sortBy: 'firstName', \n    };\n\n  }\n\n  renderHeaders(){\n    let header= headers.map( (h) => {\n      return <SortableHeader \n                key={h.key}\n                name={h.name}\n                onClicked={()=>this.updateSortBy(h.key)} \n                isSortColumn={this.state.sortBy == h.key}/>\n    });\n    return <TableRow>{header}</TableRow>;\n  }\n  \n  renderRows() {\n    return this.state.rows.map( (row, i) => <UserRow {...row} key={row.uniqueId}/> );\n  }\n                               \n  updateSortBy(sortBy){\n      // multiple clicks on the same column reverse the sort order\n      if( sortBy == this.state.sortBy ){\n        this.setState( {rows: [...this.state.rows.reverse()]} );\n        return;\n      }\n      \n      let rows = [...this.state.rows];\n      rows.sort( (a,b) => {\n        if (a[sortBy] < b[sortBy])\n          return -1;\n        if(a[sortBy] > b[sortBy])\n          return 1;\n        return 0;\n      });\n      \n      this.setState({rows, sortBy});\n    }\n\n      \n  render() {\n\n    let headers = this.props.tableHeaders;\n\n    return (\n        <MuiThemeProvider>\n        <Table>\n          <TableHeader {...headerProps}>\n              {this.renderHeaders()}\n          </TableHeader>\n          <TableBody>\n            {this.renderRows()}\n          </TableBody>\n        </Table>\n      </MuiThemeProvider>\n    );\n  }\n}\n\n  \n  \nfunction SortableHeader(props){\n  let style = {\n    cursor: \"pointer\"\n  }\n  if(props.isSortColumn){\n    style.fontWeight = \"bold\";\n    style.color = \"black\";\n  }\n  \n  return (\n    <TableHeaderColumn>\n      <div style={style} onClick={() => props.onClicked()}>{props.name}</div>\n    </TableHeaderColumn>\n  );\n}\n  \n\nfunction UserRow(props){\n  return (\n    <TableRow>\n      <TableRowColumn>{props.firstName}</TableRowColumn>\n      <TableRowColumn>{props.favColor}</TableRowColumn>\n    </TableRow>\n  );\n}\n\nexport default SortableTable;"]},"metadata":{},"sourceType":"module"}