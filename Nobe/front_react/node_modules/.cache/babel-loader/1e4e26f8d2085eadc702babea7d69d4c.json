{"ast":null,"code":"import _defineProperty from \"/home/fernando/tfg/portal/reactfront/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/fernando/tfg/portal/reactfront/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/fernando/tfg/portal/reactfront/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/fernando/tfg/portal/reactfront/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/fernando/tfg/portal/reactfront/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/fernando/tfg/portal/reactfront/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/fernando/tfg/portal/reactfront/src/components/generics/table.js\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\nvar counter = 0;\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  var stabilizedThis = array.map(function (el, index) {\n    return [el, index];\n  });\n  stabilizedThis.sort(function (a, b) {\n    var order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(function (el) {\n    return el[0];\n  });\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? function (a, b) {\n    return desc(a, b, orderBy);\n  } : function (a, b) {\n    return -desc(a, b, orderBy);\n  };\n}\n\nvar EnhancedTableHead =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EnhancedTableHead, _React$Component);\n\n  function EnhancedTableHead() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EnhancedTableHead);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EnhancedTableHead)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.createSortHandler = function (property) {\n      return function (event) {\n        _this.props.onRequestSort(event, property);\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(EnhancedTableHead, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          order = _this$props.order,\n          orderBy = _this$props.orderBy,\n          numSelected = _this$props.numSelected,\n          rowCount = _this$props.rowCount;\n      return React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, this.props.rows.map(function (row) {\n        return React.createElement(TableCell, {\n          key: row.id,\n          align: 'center',\n          padding: row.disablePadding ? 'none' : 'default',\n          sortDirection: orderBy === row.id ? order : false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, React.createElement(Tooltip, {\n          title: \"Sort\",\n          placement: row.numeric ? 'bottom-end' : 'bottom-start',\n          enterDelay: 300,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, React.createElement(TableSortLabel, {\n          active: orderBy === row.id,\n          direction: order,\n          onClick: _this2.createSortHandler(row.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, row.label)));\n      }, this)));\n    }\n  }]);\n\n  return EnhancedTableHead;\n}(React.Component);\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nvar toolbarStyles = function toolbarStyles(theme) {\n  return {\n    root: {\n      paddingRight: theme.spacing.unit\n    },\n    highlight: theme.palette.type === 'light' ? {\n      color: theme.palette.secondary.main,\n      backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n    } : {\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.secondary.dark\n    },\n    spacer: {\n      flex: '1 1 100%'\n    },\n    actions: {\n      color: theme.palette.text.secondary\n    },\n    title: {\n      flex: '0 0 auto'\n    }\n  };\n};\n\nvar EnhancedTableToolbar = function EnhancedTableToolbar(props) {\n  var numSelected = props.numSelected,\n      classes = props.classes;\n  return React.createElement(Toolbar, {\n    className: classNames(classes.root, _defineProperty({}, classes.highlight, numSelected > 0)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }));\n};\n\nEnhancedTableToolbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired\n};\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: '100%',\n      marginTop: theme.spacing.unit * 3\n    },\n    table: {\n      minWidth: 1020\n    },\n    tableWrapper: {\n      overflowX: 'auto'\n    }\n  };\n};\n\nvar EnhancedTable =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(EnhancedTable, _React$Component2);\n\n  function EnhancedTable() {\n    var _getPrototypeOf3;\n\n    var _this3;\n\n    _classCallCheck(this, EnhancedTable);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this3 = _possibleConstructorReturn(this, (_getPrototypeOf3 = _getPrototypeOf(EnhancedTable)).call.apply(_getPrototypeOf3, [this].concat(args)));\n    _this3.state = {\n      order: 'asc',\n      orderBy: 'calories',\n      selected: [],\n      data: _this3.props.data.map(function (elem) {\n        elem.id, elem.title, elem.author, elem.year;\n      }),\n      page: 0,\n      rowsPerPage: 5\n    };\n\n    _this3.handleRequestSort = function (event, property) {\n      var orderBy = property;\n      var order = 'desc';\n\n      if (_this3.state.orderBy === property && _this3.state.order === 'desc') {\n        order = 'asc';\n      }\n\n      _this3.setState({\n        order: order,\n        orderBy: orderBy\n      });\n    };\n\n    _this3.handleSelectAllClick = function (event) {\n      if (event.target.checked) {\n        _this3.setState(function (state) {\n          return {\n            selected: state.data.map(function (n) {\n              return n.id;\n            })\n          };\n        });\n\n        return;\n      }\n\n      _this3.setState({\n        selected: []\n      });\n    };\n\n    _this3.handleClick = function (event, id) {\n      var selected = _this3.state.selected;\n      var selectedIndex = selected.indexOf(id);\n      var newSelected = [];\n\n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, id);\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n      }\n\n      _this3.setState({\n        selected: newSelected\n      });\n    };\n\n    _this3.handleChangePage = function (event, page) {\n      _this3.setState({\n        page: page\n      });\n    };\n\n    _this3.handleChangeRowsPerPage = function (event) {\n      _this3.setState({\n        rowsPerPage: event.target.value\n      });\n    };\n\n    _this3.isSelected = function (id) {\n      return _this3.state.selected.indexOf(id) !== -1;\n    };\n\n    return _this3;\n  }\n\n  _createClass(EnhancedTable, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      var _this$state = this.state,\n          data = _this$state.data,\n          order = _this$state.order,\n          orderBy = _this$state.orderBy,\n          selected = _this$state.selected,\n          rowsPerPage = _this$state.rowsPerPage,\n          page = _this$state.page;\n      var emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n      return React.createElement(Paper, {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.tableWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: classes.table,\n        \"aria-labelledby\": \"tableTitle\",\n        adjustForCheckbox: \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(EnhancedTableHead, {\n        order: order,\n        orderBy: orderBy,\n        onRequestSort: this.handleRequestSort,\n        rowCount: data.length,\n        rows: this.props.headers,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }), React.createElement(TableBody, {\n        displayRowCheckbox: \"false\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, stableSort(data, getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (n) {\n        return React.createElement(TableRow, {\n          hover: true,\n          tabIndex: -1,\n          key: n.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          component: \"th\",\n          scope: \"row\",\n          padding: \"none\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          },\n          __self: this\n        }, n.name), React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        }, n.calories), React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        }, n.fat), React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250\n          },\n          __self: this\n        }, n.carbs), React.createElement(TableCell, {\n          align: \"center\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251\n          },\n          __self: this\n        }, n.protein));\n      }), emptyRows > 0 && React.createElement(TableRow, {\n        style: {\n          height: 49 * emptyRows\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        colSpan: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }))))), React.createElement(TablePagination, {\n        rowsPerPageOptions: [5, 10, 25],\n        component: \"div\",\n        count: data.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        backIconButtonProps: {\n          'aria-label': 'Previous Page'\n        },\n        nextIconButtonProps: {\n          'aria-label': 'Next Page'\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.handleChangeRowsPerPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return EnhancedTable;\n}(React.Component);\n\nEnhancedTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(EnhancedTable);","map":{"version":3,"sources":["/home/fernando/tfg/portal/reactfront/src/components/generics/table.js"],"names":["React","classNames","PropTypes","withStyles","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Typography","Paper","Checkbox","IconButton","Tooltip","lighten","counter","desc","a","b","orderBy","stableSort","array","cmp","stabilizedThis","map","el","index","sort","order","getSorting","EnhancedTableHead","createSortHandler","property","event","props","onRequestSort","numSelected","rowCount","rows","row","id","disablePadding","numeric","label","Component","propTypes","number","isRequired","func","onSelectAllClick","string","toolbarStyles","theme","root","paddingRight","spacing","unit","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","spacer","flex","actions","title","EnhancedTableToolbar","classes","object","styles","width","marginTop","table","minWidth","tableWrapper","overflowX","EnhancedTable","state","selected","data","elem","author","year","page","rowsPerPage","handleRequestSort","setState","handleSelectAllClick","target","checked","n","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","handleChangeRowsPerPage","value","isSelected","emptyRows","Math","min","headers","name","calories","fat","carbs","protein","height"],"mappings":"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","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\n\nlet counter = 0;\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nclass EnhancedTableHead extends React.Component {\n  createSortHandler = property => event => {\n    this.props.onRequestSort(event, property);\n  };\n\n  render() {\n    const { order, orderBy, numSelected, rowCount } = this.props;\n\n    return (\n      <TableHead>\n        <TableRow>\n          {this.props.rows.map(\n            row => (\n              <TableCell\n                key={row.id}\n                align={'center'}\n                padding={row.disablePadding ? 'none' : 'default'}\n                sortDirection={orderBy === row.id ? order : false}\n              >\n                <Tooltip\n                  title=\"Sort\"\n                  placement={row.numeric ? 'bottom-end' : 'bottom-start'}\n                  enterDelay={300}\n                >\n                  <TableSortLabel\n                    active={orderBy === row.id}\n                    direction={order}\n                    onClick={this.createSortHandler(row.id)}\n                  >\n                    {row.label}\n                  </TableSortLabel>\n                </Tooltip>\n              </TableCell>\n            ),\n            this,\n          )}\n        </TableRow>\n      </TableHead>\n    );\n  }\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst toolbarStyles = theme => ({\n  root: {\n    paddingRight: theme.spacing.unit,\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  spacer: {\n    flex: '1 1 100%',\n  },\n  actions: {\n    color: theme.palette.text.secondary,\n  },\n  title: {\n    flex: '0 0 auto',\n  },\n});\n\nlet EnhancedTableToolbar = props => {\n  const { numSelected, classes } = props;\n\n  return (\n    <Toolbar\n      className={classNames(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      <div className={classes.title}>\n        \n      </div>\n      <div className={classes.spacer} />\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n};\n\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing.unit * 3,\n  },\n  table: {\n    minWidth: 1020,\n  },\n  tableWrapper: {\n    overflowX: 'auto',\n  },\n});\n\nclass EnhancedTable extends React.Component {\n  state = {\n    order: 'asc',\n    orderBy: 'calories',\n    selected: [],\n    data: this.props.data.map(elem => {elem.id, elem.title, elem.author, elem.year}),\n    page: 0,\n    rowsPerPage: 5,\n  };\n\n  handleRequestSort = (event, property) => {\n    const orderBy = property;\n    let order = 'desc';\n\n    if (this.state.orderBy === property && this.state.order === 'desc') {\n      order = 'asc';\n    }\n\n    this.setState({ order, orderBy });\n  };\n\n  handleSelectAllClick = event => {\n    if (event.target.checked) {\n      this.setState(state => ({ selected: state.data.map(n => n.id) }));\n      return;\n    }\n    this.setState({ selected: [] });\n  };\n\n  handleClick = (event, id) => {\n    const { selected } = this.state;\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    this.setState({ selected: newSelected });\n  };\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\n\n  render() {\n    const { classes } = this.props;\n    const { data, order, orderBy, selected, rowsPerPage, page } = this.state;\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n\n    return (\n      <Paper className={classes.root}>\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} aria-labelledby=\"tableTitle\" adjustForCheckbox=\"false\">\n            <EnhancedTableHead\n              order={order}\n              orderBy={orderBy}\n              onRequestSort={this.handleRequestSort}\n              rowCount={data.length}\n              rows={this.props.headers}\n            />\n            <TableBody displayRowCheckbox=\"false\">\n              {stableSort(data, getSorting(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map(n => {\n                  return (\n                    <TableRow\n                      hover                      \n                      tabIndex={-1}\n                      key={n.id}\n                    >\n                      <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        {n.name}\n                      </TableCell>\n                      <TableCell align=\"center\">{n.calories}</TableCell>\n                      <TableCell align=\"center\">{n.fat}</TableCell>\n                      <TableCell align=\"center\">{n.carbs}</TableCell>\n                      <TableCell align=\"center\">{n.protein}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 49 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={data.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            'aria-label': 'Previous Page',\n          }}\n          nextIconButtonProps={{\n            'aria-label': 'Next Page',\n          }}\n          onChangePage={this.handleChangePage}\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n        />\n      </Paper>\n    );\n  }\n}\n\nEnhancedTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(EnhancedTable);"]},"metadata":{},"sourceType":"module"}